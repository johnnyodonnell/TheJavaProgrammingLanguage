1.

From p. 464

"""
A design that uses reference queues can be more reliable than direct use of
finalization - particularly with phantom references - but remember that there
are no guarantees as to exactly when or in what order a reference object will
be enqueued.
"""

So then why is a design that uses reference queues more reliable than direct
use of finalization?

This book isn't very popular, so I doubt this type of question would get
much attention on StackOverflow.

-------------------------------------------------------------------------------

2.

From p. 606

In regards to ConcurrentHashMap:
"""
Although all operations are thread-safe, they do not involve locking
"""

How is this possible?

It's not possible as far as I'm aware and `ConcurrentHashMap` uses
locks for it's implementation.

See https://stackoverflow.com/q/11793067/5832619

-------------------------------------------------------------------------------

